rd_("AbIP based addresses0BnConfigures the endpoint to use the n0 defaultsoA QUIC EndpointAlThe endpoint\xe2\x80\x99s identifier.AoGet the identity of this stream0BiReturns the endpoint id of this endpoint.2CiReturns a watcher that updates every time this or the \xe2\x80\xa6AhUses all available pathsBmApplication layer added the address directly.BcError when decoding the public key.0AoThe largest representable valueBkPublic internet address discovered via QAD.lDNS over TCPlDNS over TLSBoAn endpoint communicated with us first via UDP.lDNS over UDPBfAdds a <code>Discovery</code> service.ClPkarr based endpoint discovery for iroh, supporting both \xe2\x80\xa6BlSets whether to publish to the Mainline DHT.AnWhich directions data flows inCiThis module exports a DNS resolver, which is also the \xe2\x80\xa6AoDNS endpoint discovery for irohCiImplementation of a DNS name server for iroh endpoint \xe2\x80\xa6AjConfig for the DNS server.lDNS resolverBeExplicit congestion notification bitsCbReturns the current state of the underlying value.AoReturns the config for a relay.0BeThe amount of I/O operations executedBoReturns the number of relays in this relay map.BjReturns the number of services configured.1CiMaps this watcher with a function that transforms the \xe2\x80\xa6DhCreates a new <code>EndpointAddr</code> with no network level addresses.DiCreates a new <code>EndpointData</code> with a relay URL and a set of \xe2\x80\xa6E`Creates a new <code>EndpointInfo</code> with an empty <code>EndpointData</code>.DjCreates a new <code>DiscoveryItem</code> from a <code>EndpointInfo</code>.AeCreates a new client.BhCreates a new static discovery instance.CkCreates a new DNS resolver with sensible cross-platform \xe2\x80\xa6CmCreate a default config with a particular handshake token \xe2\x80\xa6AeCreate a new StreamIdDgCreates a new <code>Builder</code> using the given <code>Preset</code>.BcInitializes new connection options.CoCreates a new router builder using given <code>Endpoint</code>.BfCreate a new <code>AccessLimit</code>.<AhCreate a new zone store.ClCreate a DNS server given some settings, a connection to \xe2\x80\xa6ClCreates a new ping tracker, setting the ping timeout for \xe2\x80\xa6BgCreate a new <code>ClientBuilder</code>CmCreate a new QuicClient to handle the client side of QUIC \xe2\x80\xa6;DiCreates a new <code>EndpointData</code> with a relay URL and a set of \xe2\x80\xa6E`Creates a new <code>EndpointInfo</code> with an empty <code>EndpointData</code>.ChCurrent best estimate of this connection\xe2\x80\x99s latency \xe2\x80\xa60BgRun DNS and Pkarr servers on localhost.BgTLS configuration for the HTTPS server.CbSets the TTL (time-to-live) for published packets.C`Sets the time-to-live value for the DNS packets.BbThe origin of this direct address.C`Returns this frame\xe2\x80\x99s corresponding frame type.D`The <code>RelayUrl</code> where this relay server can be dialed.0AaAccess is denied.AoName of this discovery service.C`We have no verified connection to this PublicKeyBeWe received a Ping from the endpoint.CkMessages with these frames will be ignored. 8 byte ping \xe2\x80\xa6ClRequest from the relay to reply to the other side with a \xe2\x80\xa6CiRequest from the client to the server to reply to the \xe2\x80\xa6BeWe received a Pong from the endpoint.Ce8 byte payload, the contents of ping being replied toDiReply to a <code>ClientToRelayMsg::Ping</code> from a client with the \xe2\x80\xa6DiReply to a <code>RelayToClientMsg::Ping</code> from a server with the \xe2\x80\xa6B`An error occurred during readingDjReturns the current <code>EndpointAddr</code>. As long as the endpoint \xe2\x80\xa6C`The UDP address reported by the remote endpoint.lThe address.CjExtracts the ALPN protocol from the peer\xe2\x80\x99s handshake \xe2\x80\xa60AiBinds the magic endpoint.DdConstructs a default <code>Endpoint</code> and binds it immediately.AhMode for getting a cert.mType of errorBkCurrent congestion window of the connectionBmThe information published about the endpoint.00AoReturns the argument unchanged.000000000CmCreates a <code>RelayMap</code> from a <code>RelayUrl</code>.111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111101111111111111111111111111111111111111111111111111BcHTTP server part of iroh-dns-serverAjConfig for the HTTP serverChHTTP-specific constants for the relay server and client.BnPerform the initial load and construct the \xe2\x80\xa6BaCalls <code>U::from(self)</code>.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000BiEnable ipv4 QUIC address discovery probesBiEnable ipv6 QUIC address discovery probesAnPeer-to-peer QUIC connections.CeReturns an iterator over all the relays and their \xe2\x80\xa6ClReturns an iterator over the character strings contained \xe2\x80\xa6AlLoad the config from a file.CiA discovery service that uses an mdns-like service to \xe2\x80\xa6CiThe name of the discovery service that discovered the \xe2\x80\xa6CcThe name of the application that added the endpointCeMethod for opening a sealed message <code>data</code>CcStatistics related to the current transmission pathBkThe port to serve a local UDP DNS server atoPort to bind to0CdThe port on which the connection should be bound to.AiProduction configuration.ClConfiguration to speak to the QUIC endpoint on the relay \xe2\x80\xa6CjCreate a QUIC server that accepts connections for QUIC \xe2\x80\xa61DaConfiguration for the QUIC server, disabled if <code>None</code>.BgRead data contiguously from the stream.Bl<code>A</code> record to set for all originsBlMethod for sealing message <code>data</code>CeSign the given message and return a digital signature0AcStop accepting dataCbReturns the URLs of all servers in this relay map.0AbAccess is allowed.BgA chunk of data from the receive streamAeProtocol send errors.AkQuic client related errors.eHTTPSnDNS over HTTPSAoA locally bound socket address.BlThe 6 byte header of all discovery messages.BkBoth a UDP and a relay connection are used.CbThe protocol used to time an endpoint\xe2\x80\x99s latency.fRelaysAkRelay connection over relayCaAn endpoint communicated with us first via relay.2CcThe peer abandoned transmitting data on this streamCnThe peer is unable to continue processing this connection, \xe2\x80\xa6AoAddress was loaded from the fs.CgEnable rate limit based on headers commonly used by \xe2\x80\xa6BbThe type of value that can change.AjThe endpoint\xe2\x80\x99s addressesBlReturns the full list of all known addresses10CmSets the ALPN protocols that this endpoint will accept on \xe2\x80\xa6D`Applies the configuration to the passed in <code>Builder</code>.DlBuilds a <code>DnsDiscovery</code> with the passed <code>DnsResolver</code>.DiBuilds the <code>PkarrPublisher</code> with the passed secret key for \xe2\x80\xa6CgCreates a <code>PkarrResolver</code> from this builder.AoBuilds the discovery mechanism.DeBuilds an <code>MdnsDiscovery</code> instance with the configured \xe2\x80\xa6BiConstruct a fresh <code>Controller</code>AhBuilds the DNS resolver.AiThe contents of the chunkCiThe total amount of bytes which have been transferred \xe2\x80\xa6BjThe amount of bytes which had been writtenAjThe TLS certificate chain.BnCloses the QUIC endpoint and the magic socket.BbCloses the connection immediately.DiThis module exports <code>looks_like_disco_wrapper</code> as the only \xe2\x80\xa6AkCreates an empty relay map.CbCreates an empty <code>ConcurrentDiscovery</code>.CmCreates an empty builder, which means there are no relays \xe2\x80\xa62BcFrame type that triggered the errorAmEnable or disable https probeAkConfig for the HTTPS serverCcDistinguishes streams of the same initiator and \xe2\x80\xa6CmA discovery service which publishes and resolves endpoint \xe2\x80\xa6DbConfiguration for the Relay server, disabled if <code>None</code>.CgThis module implements the send/recv relaying protocol.AmRecreates the inner resolver.BbClose the send stream immediately.BcCompletely resets the DNS resolver.2AmResponds with a retry packet.Bm<code>NS</code> record to set for all originsCdSpawns an accept loop and returns a handle to it \xe2\x80\xa6AaSpawn the server.A`Spawn the server1AbStarts the server.BkSplits the client into a sink and a stream.BnShared state and store for the iroh-dns-serverBgState for Let\xe2\x80\x99s Encrypt certificates.AnReturns connection statistics.CeShow connection stats the at the end of the benchmarkAcThe pkarr DNS storeAiWrite bytes to the streamCaFuture produced by <code>Endpoint::accept</code>.BcAccess restriction for an endpoint.oA relay client.AdServer configurationAgUse a custom relay map.AmUse custom bootstrap servers.AdError when decoding.0AeDirect UDP connectionClA handle to the channel over which the response to a DNS \xe2\x80\xa6CjSent from server to client to tell the client if their \xe2\x80\xa6CiA one-way message from relay to client, declaring the \xe2\x80\xa6CjThe length of an ed25519 <code>PublicKey</code>, in bytes.CjThe length of an ed25519 <code>Signature</code>, in bytes.10lRate limits.ChCerts are loaded from a the <code>cert_cache</code> pathBkUse a static TLS key and certificate chain.CcFuture produced by <code>Connection::open_bi</code>A`Defines a presetAdA net_report report.AaThe built router.AdThe iroh-dns server.AmA running Relay + QAD server.CiEnable rate limit based on the connection\xe2\x80\x99s peer IP \xe2\x80\xa6DeThe origin or <em>source</em> through which an address associated \xe2\x80\xa6AiAn integer less than 2^62BoAccepts an incoming connection on the endpoint.CmAttempts to accept this incoming connection (an error may \xe2\x80\xa6AnHandle an incoming connection.BiSee <code>ProtocolHandler::accept</code>.DiConfigures the router to accept the <code>ProtocolHandler</code> when \xe2\x80\xa6AeAccess configuration.C`The amount of full chunks which had been writtenBhExplicitly sets the pkarr client to use.AgCreate and run a client0DkExposes <code>Client</code>, which allows to establish connections to a \xe2\x80\xa6CdWait for the connection to be closed for any reason.EhCommon types between the <code>super::handshake</code> and <code>super::relay</code> \xe2\x80\xa6AlConfiguration for the serverBjCreate QUIC error code from TLS alert codeBoTLS configuration used for incoming connectionsDhCreates a new <code>DnsResolver</code> from a struct that implements \xe2\x80\xa60CdExtends this <code>RelayMap</code> with another one.0CmNotify the peer that no more data will ever be written to \xe2\x80\xa6CmIgnores this incoming connection attempt, not sending any \xe2\x80\xa6BgInserts a new relay into the relay map.CdInsert a signed packet into the cache and the store.1CfEnables saving the TLS pre-master key for connections.lRate limits.DdCreates a new DNS discovery using the <code>iroh.link</code> domain.CkCreates a pkarr publisher which uses the number 0 pkarr \xe2\x80\xa6ClCreates a pkarr resolver builder which uses the number 0 \xe2\x80\xa6AhThe offset in the streamB`Packet deliveries were confirmedCjA convenience method that waits for the endpoint to be \xe2\x80\xa6BfApplies the given <code>Preset</code>.B`Protocols used by the iroh-relayBnThe public key of this <code>SecretKey</code>.0BcHuman-readable reason for the close0BhHuman-readable explanation of the reasonBiRejects this incoming connection attempt.DkReturns a list with the <code>RelayConfig</code> for each relay in this \xe2\x80\xa60AgReload the certificate.BeRemoves an existing relay by its URL.0BmTake the provided endpoint and run the server0CkThe main server which combines the DNS and HTTP(S) servers.CeA fully-fledged iroh-relay server over HTTP or HTTPS.BeMetrics tracked for the relay server.ClReturns a stream which will yield the most recent values \xe2\x80\xa6DeEncodes a <code>EndpointId</code> in <code>z-base-32</code> encoding.0CgStatistics about UDP datagrams received on a connectionCjStatistics about UDP datagrams transmitted on a connectionB`A QAD IPv4 round trip completed.B`A QAD IPv6 round trip completed.ClVerify a signature on a message with this secret key\xe2\x80\x99s \xe2\x80\xa60CcNumber of ack-eliciting bytes that may be in flightCaA key for sealing data with AEAD-based algorithmsAeBoxed iterator alias.BfBuilder for <code>DhtDiscovery</code>.BbBuilder for <code>Endpoint</code>.BeBuilder for <code>DnsResolver</code>.ClUse the default relay map, with production relay servers \xe2\x80\xa6BbUse the default bootstrap servers.CmA peer was expired due to being inactive, unreachable, or \xe2\x80\xa6AnEnum of metrics for the moduleAkMetrics for iroh-dns-serverBdMetrics tracked for the relay serverCdFuture produced by <code>Connection::open_uni</code>AjOptions for running probesAkQUIC Address Discovery Ipv4AkQUIC Address Discovery Ipv6BfUse the staging relay servers from n0.CcThe peer is no longer accepting data on this streamCjThe maximum amount of time, in seconds, the net_report \xe2\x80\xa6CaThe stream is larger than the user-supplied limitAdNot yet determined..CkA handle to a value that\xe2\x80\x99s represented by one or more \xe2\x80\xa6ClIndicates how many bytes and chunks had been transferred \xe2\x80\xa6CfNumber of times this server has accepted a connection.0EhCreates a <code>DnsDiscoveryBuilder</code> that implements <code>IntoDiscovery</code>\xe2\x80\xa6DhReturns a <code>PkarrPublisherBuilder</code> that publishes endpoint \xe2\x80\xa6ChCreates a new resolver builder using the pkarr relay \xe2\x80\xa6CdCreates a new builder for <code>DhtDiscovery</code>.CoReturns a <code>MdnsDiscoveryBuilder</code> that implements \xe2\x80\xa6CmCreates a builder to construct a DNS resolver with custom \xe2\x80\xa6DgReturns the builder for an <code>Endpoint</code>, with a production \xe2\x80\xa6DdCreates a new <code>Router</code> using given <code>Endpoint</code>.2CcThe total number of clients which should be createdBkConnects to a remote <code>Endpoint</code>.CaEstablishes a new connection to the relay server.ClThe list of domains for which SSL certificates should be \xe2\x80\xa6BjSet to true to enable the mainline lookup.BnDo we have any indication that UDP is working?CbCheck if this stream has been opened during 0-RTT.CgReturns the currently lowest latency for this endpoint.CjThe latency to the remote endpoint over this network path.BkCo-locating all of the iroh metrics structsBlReturns metrics collected for this endpoint.CgShow iroh library counter metrics at the end of the \xe2\x80\xa6AnMetrics support for the serverAbMetrics collector.AnConfig for the metrics server.CbReturns the metrics collected in the relay server.CnThe maximum UDP payload size guaranteed to be supported by \xe2\x80\xa6BbOne or more packets were just sentBnInitiates a new outgoing bidirectional stream.EdDomain used for serving the <code>_iroh.&lt;endpointid&gt;.&lt;origin&gt;</code> \xe2\x80\xa6ChPresets allow configuring an endpoint quickly with a \xe2\x80\xa6CeIf set, is a description of why the connection is \xe2\x80\xa6DbPublishes the given <code>EndpointData</code> to the discovery \xe2\x80\xa6BfPublishes a <code>SignedPacket</code>.ClNumber of reports executed by net_report, including full \xe2\x80\xa6DnResolves the <code>DiscoveryItem</code> for the given <code>EndpointId</code>.DkResolves a <code>SignedPacket</code> for the given <code>EndpointId</code>.AdResolve a DNS query.Bo<code>AAAA</code> record to set for all originsDiA <code>HashMap</code> of <code>Source</code>s to <code>Duration</code>s.AfStaging configuration.CiCompletes when the peer stops the stream or reads the \xe2\x80\xa6CcThe total number of streams which should be createdClImplements logic for abstracting over a websocket stream \xe2\x80\xa6ClExposes functions to quickly configure a server suitable \xe2\x80\xa6BgCancel-safe waiting for a ping timeout.CgAn advisory duration for how long the client should \xe2\x80\xa6DfReturns a future completing with <code>Ok(value)</code> once a new \xe2\x80\xa6CeFuture produced by <code>Connection::accept_bi</code>AeThe shared app state.C`The mode how SSL certificates should be created.BdDatagram support is disabled locallyBaDisable relay servers completely.AcDisable rate limit.B`Potential errors related to dns.ClControls an iroh endpoint, establishing connections with \xe2\x80\xa6hEveryoneCkAn incoming connection for which the server has not yet \xe2\x80\xa6B`The largest encoded value lengthCmthe connection is being closed abruptly in the absence of \xe2\x80\xa6CmApplication layer with a specific name added the endpoint \xe2\x80\xa6CmList of relay server configurations to be used in an iroh \xe2\x80\xa60BaA URL identifying a relay server.0BeTrait for DNS resolvers used in iroh.CfIdentifier for a stream within a particular connectionCnCommunication with the peer has lapsed for longer than the \xe2\x80\xa6ClThe datagram is larger than the connection can currently \xe2\x80\xa6CmStatistics about UDP datagrams transmitted or received on \xe2\x80\xa6CkUnder the hood this is a UTF-8 String is no longer than \xe2\x80\xa600BdGet this public key as a byte array.0EhReturns <code>true</code> if a relay with <code>url</code> is contained in this this \xe2\x80\xa60AoThe contents of the datagram(s)AgGet the data directory.BhDefault values used in <code>iroh</code>BaDefault values used in the relay.CgCreate an <code>Options</code> that disables all probesAkDisable the metrics server.BjSet to true to disable the metrics server.ChReturns the <code>Endpoint</code> stored in this router.CbReturns the <code>Endpoint</code> of the endpoint.DkThe <code>Endpoint</code> allows establishing connections to other iroh \xe2\x80\xa6C`Statistics about frames received on a connectionCcStatistics about frames transmitted on a connectionCfCreates a new user error from an arbitrary error type.00BjConstruct a <code>VarInt</code> infalliblyBeSucceeds iff <code>x</code> &lt; 2^62DfParses a <code>EndpointId</code> from <code>z-base-32</code> encoding.0DbGenerate a new <code>SecretKey</code> with a randomness generator.0C`Number of <code>FrameType::Ping</code>s received0BnGet the server\xe2\x80\x99s http <code>RelayUrl</code>.CmSpecifies the time to wait after completing MTU discovery \xe2\x80\xa6CcReturns Self for use in down-casting to extract \xe2\x80\xa6BlReturns a list of IP addresses of this peer.BmReturns the direct addresses of the endpoint.10EhReturns <code>true</code> if the <code>Connection</code> associated with this handle \xe2\x80\xa6CkReturns true, if only a <code>EndpointId</code> is present.CeReturns <code>true</code> if this relay map is empty.BaIs there any services configured?21CmReturns the local IP address which was used when the peer \xe2\x80\xa6AoConfig for the mainline lookup.AbStarts a new ping.BoInitiates a new outgoing unidirectional stream.BcGet the priority of the send streamCjTools for spawning an accept loop that routes incoming \xe2\x80\xa6BbCalled when the router shuts down.BkSee <code>ProtocolHandler::shutdown</code>.BcShuts down the accept loop cleanly.CfShutdown the server an wait for all tasks to complete.CgShutdown the server and wait for all tasks to complete.CkCancel the server tasks and wait for all tasks to complete.AfShutdown the resolver.AkRequests graceful shutdown.CkConvert this to the bytes representing the secret part. \xe2\x80\xa6AlReturn the inner byte array.10BeSucceeds iff <code>x</code> &lt; 2^6200CfFuture produced by <code>Connection::accept_uni</code>CmRepresents datagrams sent from relays (originally sent to \xe2\x80\xa6CnRequest from the client to relay datagrams to given remote \xe2\x80\xa6CjOne or multiple datagrams being transferred via the relay.CeErrors that can occur while dialing the relay server.CbThe address was discovered by a discovery service.CdEndpoint discovery for <code>super::Endpoint</code>.AcDNS server settingsBnA DNS server that serves pkarr signed packets.BgPossible frame types during handshakingBiStatistics related to a transmission pathmA public key.0AeA read error occurredBmErrors that arise from reading from a stream.CeErrors when receiving messages from the relay server.D`Configuration of the relay servers for an <code>Endpoint</code>.CcForces all traffic to go exclusively through relaysCiUse a TLS key and certificate chain that can be reloaded.mA secret key.0BoError for sending messages to the relay server.AbEd25519 signature.0BcTLS configuration for Relay server.BaA store for pkarr signed packets.BnAccept the next incoming bidirectional stream.BcAdd addresses to the endpoint data.0DbAdds an already <code>Box</code>ed <code>Discovery</code> service.CiSets whether this endpoint should advertise its presence.BkOptionally set a custom address to bind to.CmThe IPv4 or IPv6 address to bind the UDP DNS server. Uses \xe2\x80\xa6CmOptionally set a custom bind address (will use 0.0.0.0 if \xe2\x80\xa60ChThe socket address on which the QUIC server should bind.AkSet custom bootstrap nodes.BdThe mode of SSL certificate creationCjRate limits for incoming traffic from a client connection.BbDuplicate the controller\xe2\x80\x99s stateDkReturns a <code>Watcher</code> that reports the current connection type \xe2\x80\xa6BdThe amount of UDP datagrams observedBlThe datagrams and related metadata to relay.BcThe datagrams and related metadata.AkEndpoint address discovery.BmAdds a discovery mechanism for this endpoint.BoReturns the discovery mechanism, if configured.E`Create a <code>ConcurrentDiscovery</code> with <code>DnsDiscovery</code> and \xe2\x80\xa6CnConvert to a hex string limited to the first 5 bytes for a \xe2\x80\xa60DjCreates a <code>RelayMap</code> from an iterator of <code>RelayUrl</code>.0Afip:port of global IPv4Be<code>[ip]:port</code> of global IPv6ClImplements the handshake protocol that authenticates and \xe2\x80\xa6AmDoes this have any addresses?0BiGet the bound address of the HTTP socket.CcThe socket address the HTTP server is listening on.BoGet the server\xe2\x80\x99s https <code>RelayUrl</code>.AjCreate an in-memory store.BoWhich side of a connection initiated the streamDaConverts this <code>Connecting</code> into a 0-RTT or 0.5-RTT \xe2\x80\xa6BaBase types and utilities for IrohCiCheck if this endpoint is still alive, or already closed.BmMetrics collected by the endpoint\xe2\x80\x99s socket.CdWhether to allow clients to migrate to new addressesBaThe HTTP URL of the Pkarr server.BjAttempts to read from the stream into buf.CkSets an explicit proxy url to proxy all HTTP(S) traffic \xe2\x80\xa6CjSet an explicit proxy url to proxy all HTTP(S) traffic \xe2\x80\xa6CcThe socket address the QUIC server is listening on.BdReturns the relay map for this mode.DfReturns the <code>EndpointId</code> from the peer\xe2\x80\x99s TLS certificate.BmGenerate the integrity tag for a retry packetBlNumber of <code>FrameType::Pong</code>s sent0BiSets the list of accepted ALPN protocols.BhA stable identifier for this connection.BaSubscribe to discovered endpointsCePrivate key used to authenticate data included in \xe2\x80\xa6CgTransport configuration to use for incoming connectionsCgReturns the optional user-defined data of the endpoint.AnReturns any user-defined data.1CjConvenience method to write an entire buffer to the streamAnTLS certificate configuration.CbThe client frame type for the authentication frameB`The send half of a relay client.BeIn-progress connection attempt futureAbA QUIC connection.BmThe type of control message we have received.CeCommon interface for different congestion controllersD`A <em>direct address</em> on which an iroh-endpoint might be \xe2\x80\xa6ChA peer was discovered or it\xe2\x80\x99s information was updated.AeState for serving DNSCeThe identifier for an endpoint in the (iroh) network.0BoNumber of frames transmitted of each frame typeAjConfig for the HTTP serverBjThe HTTP(S) server part of iroh-dns-serverCbThe max byte length allowed for user-defined data.0ChThe provenance string for this discovery implementation.CeAn address assigned by the router using port mapping.CbHandles the client side of QUIC address discovery.BkPieces needed to do QUIC address discovery.BbConfiguration for the QUIC server.ChThe HTTP path under which the relay accepts relaying \xe2\x80\xa6BnA stream that can only be used to receive dataChErrors that arise while waiting for a stream to be resetCmSent from server to client for the server to declare that \xe2\x80\xa6ClA one-way message from relay to client, advertising that \xe2\x80\xa6DkOnly endpoints for which the function returns <code>Access::Allow</code>\xe2\x80\xa6DhError for attempting to retry an <code>Incoming</code> which already \xe2\x80\xa6CiCreate self-signed certificates and store them in the \xe2\x80\xa6BkA stream that can only be used to send dataAcServer spawn errorsBjErrors that arise from writing to a streamCaAccepts the next incoming uni-directional stream.CkWhether the implementation is permitted to set the spin \xe2\x80\xa6ChBytes received from a <code>FrameType::SendPacket</code>0CdBytes sent from a <code>FrameType::SendPacket</code>0BnClass of error as encoded in the specificationB`Application-specific reason codeBcType of frame that caused the closeCiConstruct a <code>PublicKey</code> from a slice of bytes.CaCreate a secret key from its byte representation.BmParse an Ed25519 signature from a byte slice.210CgCreates a new <code>EndpointAddr</code> from its parts.CgCreates a new <code>EndpointInfo</code> from its parts.10BjGet the bound address of the HTTPS socket.CdThe socket address the HTTPS server is listening on.AiExtract the integer valueCkIroh\xe2\x80\x99s relay is a feature within iroh, a peer-to-peer \xe2\x80\xa6AiIs this endpoint allowed?ChElapsed time since this network path was known to exist.BlGet the local address of the UDP/TCP socket.BhReturns the local address of the client.AfLooks up a TXT record.AeLooks up TXT records.1BeThe amount of bytes lost on this pathBeThe socket address of the DNS server.CdChecks the network conditions from the current host.BaMetrics collected by net reports.C`Disables publishing even if a secret key is set.ChWhether to run a local relay and have the server and \xe2\x80\xa6AnNumber of PCP probes executed.AiCreate a persistent storeC`Attempt to write bytes from buf into the stream.BlMetrics collected by the portmapper service.BnReturns the provenance of this discovery item.AmRead the next segment of dataCkRead an exact number of bytes contiguously from the stream.CdSets the relay servers to assist in establishing \xe2\x80\xa6BjReturns a list of relay urls of this peer.BfReturns the relay URL of the endpoint.10CgSets the secret key to use for signing the DNS packets.CcSets a secret key to authenticate with other peers.BhReturns the secret_key of this endpoint.BfInternal utilities to support testing.CfCreates a <code>TlsConfig</code> suitable for testing.EeReturns a <code>Watcher</code> for the current <code>EndpointAddr</code> for this \xe2\x80\xa6AiAdds a list of addresses.0AjConfig for the zone store.CmWraps an existing protocol, limiting its access, based on \xe2\x80\xa6AjWe received a CallMeMaybe.AeGeneric crypto errorsCaProtocols over which DNS records can be resolved.CcThe DNS resolver used throughout <code>iroh</code>.0AkConfig for the HTTPS serverAmACME with LetsEncrypt serversAdUse Let\xe2\x80\x99s Encrypt.BjTracks pings on a single relay connection.BgInformation on a specific relay server.0CbConfiguration for the Relay HTTP and HTTPS server.AiThe config for the store.CcAccepts this incoming connection using a custom \xe2\x80\xa6BcRemoves all entries from the cache.AjClears the internal cache.1BbCreate a connection usable for qadCdLargest UDP payload size the path currently supportsCaSOA record data for any authoritative DNS recordsCmDefault time to live for returned DNS records (TXT &amp; SOA)CiNumber of connections we have removed because of an error0AhHandler for DNS requestsCcReturns the endpoint id of the discovered endpoint.CjThe <code>EndpointId</code> of the endpoint this is about.BdThe id of the endpoint that expired.11CkThe initial value to be used as the maximum UDP payload \xe2\x80\xa6BkStarting guess for maximum UDP payload sizeBjThe RTT used before an RTT sample is takenDjReturns a future completing once the value is set to <code>Some</code> \xe2\x80\xa6BiChecks if the router is already shutdown.BgPerforms an IPv4 lookup with a timeout.AiLooks up an IPv4 address.1BgPerforms an IPv6 lookup with a timeout.AiLooks up an IPv6 address.1CeThe amount of concurrent streams which should be usedDdPackets are acked in batches, all with the same <code>now</code> \xe2\x80\xa6ClWait until a Pkarr announce for an endpoint is published \xe2\x80\xa6B`Sets the pkarr relay URL to use.AbEnable quic probesCgCreates a <code>QuicConfig</code> suitable for testing.AnRead the next segments of dataCkConvenience method to read all remaining data into a bufferCiMaximum number of bytes to transmit to a peer without \xe2\x80\xa6B`Returns the handle for the task.BmObject to get current <code>SystemTime</code>CaNumber of bytes to transmit from client to serverAoNumber of UPnP probes executed.CnSpecifies the upper bound to the max UDP payload size that \xe2\x80\xa6DgCreate a server config with the given <code>crypto::ServerConfig</code>CnConvenience method to write a single chunk in its entirety \xe2\x80\xa6CfControls which endpoints are allowed to use the relay.BcThe receive half of a relay client.CgThe stream has already been stopped, finished, or resetBmThe stream has already been finished or resetCmError indicating that a stream has not been opened or has \xe2\x80\xa6AbConnection errors.CgPkarr Mainline DHT and relay server endpoint discovery.AfDNS endpoint discoveryCjNetwork-level addressing information for an iroh endpoint.0CgData about an endpoint that may be published to and \xe2\x80\xa600ChSent from server to client to signal that a previous \xe2\x80\xa6CjIndicates that the client identified by the underlying \xe2\x80\xa6CnInformation about an endpoint that may be published to and \xe2\x80\xa600CiFuture produced by <code>Connection::read_datagram</code>BdMetrics tracked for the relay serverBhAll metrics tracked in the relay server.BiParameters governing incoming connectionsBaConfiguration for the full Relay.CmErrors that arise while monitoring for a send stream stop \xe2\x80\xa6BlTurn the options into set of valid protocolsAkSets the IPv4 bind address.AkSets the IPv6 bind address.ChThe certificates chain if configured with manual TLS \xe2\x80\xa6BlIf the connection is closed, the reason why.AdDNS requests (total)AmSets the DNS resolver to use.CnSets the DNS resolver to use for resolving the pkarr relay \xe2\x80\xa60CiOptionally sets a custom DNS resolver to use for this \xe2\x80\xa6ClReturns the DNS resolver used in this <code>Endpoint</code>.DhCreate a <code>DnsResolver</code> configured to use the test DNS server.CjCreates a new user error from an arbitrary boxed error \xe2\x80\xa60CgCreate the initial set of keys given the client\xe2\x80\x99s \xe2\x80\xa6CmAdds the provided configuration to the <code>RelayMap</code>.CiWhether this watcher is still connected to all of its \xe2\x80\xa6CmLast control message received by this endpoint about this \xe2\x80\xa6ClElapsed time since the last payload message was received \xe2\x80\xa6CnReturns the optional timestamp when this endpoint info was \xe2\x80\xa6CjOptional timestamp when this endpoint address info was \xe2\x80\xa6BgThe amount of packets lost on this pathDcMaximum number of <code>Incoming</code> to allow to exist at a timeAkSocket to serve metrics on.DiPolls for the next value, or returns <code>Disconnected</code> if one \xe2\x80\xa6CkAn advisory duration that the client should wait before \xe2\x80\xa6ChCreates a <code>RelayConfig</code> suitable for testing.DdRemoves the configuration from the <code>RelayMap</code> for the \xe2\x80\xa6BmNumber of full reports executed by net_reportC`Resolves a hostname from a URL to an IP address.0CkThe segment size if this transmission contains multiple \xe2\x80\xa6BgThe amount of packets sent on this pathAkSets a custom service name.BcSet the priority of the send streamAiAdds an IP based address.0AjWrite chunks to the streamCmThe connection could not be created because not enough of \xe2\x80\xa6oBuild a Client.D`Endpoint discovery results from <code>Discovery</code> services.DiExtension methods for <code>EndpointId</code> to encode to and decode \xe2\x80\xa60BnThe stream finished before all bytes were readCcreceived an invalid Retry Token in a client InitialBeThe DNS name for the iroh TXT record.0DdTrait for structs that can be converted into <code>Discovery</code>.BkThe local application closed the connectionDaDiscovery using <code>swarm-discovery</code>, a variation on mdnsBbThe config for the metrics server.CnDefines the mode of path selection for all traffic flowing \xe2\x80\xa6CkResolver of endpoint discovery information from a pkarr \xe2\x80\xa6CcHard NAT: QAD\xe2\x80\x99ed IPv4 address + local fixed port.DcBuilder for creating a <code>Router</code> for accepting protocols.AhAvailable address types.0AmRecord data for a TXT record.CnReturns the local socket addresses on which the underlying \xe2\x80\xa6A`A client config.CaNumber of bytes to transmit from server to clientDcReturns the builder for an <code>Endpoint</code>, with an empty \xe2\x80\xa6ClSupport for handling DNS resource records for dialing by \xe2\x80\xa6DbReturns the <code>EndpointInfo</code> for the discovered endpoint.CbThe endpoint info for the endpoint, as discovered.2BoCreates a new <code>ConcurrentDiscovery</code>.AgNumber of HTTP requestsAmGet the <code>Incoming</code>CnThe <code>max_ack_delay</code> we will request the peer to useDhOptional interception point to handle the <code>Connecting</code> state.C`See <code>ProtocolHandler::on_connecting</code>.CkThe known MTU for the current network path has been updatedBmNumber of PCP probes that found it available.BcCryptographic identity of the peer.BnUpdates the ping tracker with a received pong.BaReceives an application datagram.Abkeyed by relay UrlDgTransmits <code>data</code> as an unreliable, unordered application \xe2\x80\xa6CmWhether to implement fair queuing for send streams having \xe2\x80\xa6CaThe TLS server configuration for the QUIC server.AiThe server configuration.CiCreates a <code>ServerConfig</code> suitable for testing.C`Sets the user-defined data of the endpoint data.0BnStart a server session with this configurationDiSplits the current datagram into at maximum <code>num_segments</code> \xe2\x80\xa6Ck<code>ToString::to_string</code>, but without panic on OOM.0000000000000000000000000000000000000000000000000000000000000000000CnSets the direct addresses and returns the updated endpoint \xe2\x80\xa6CgSets the IP based addresses and returns the updated \xe2\x80\xa610DbOptions for the <code>Endpoint::connect_with_opts</code> function.AgThe connection was lost0000BoThe type of connection we have to the endpoint.BlInformation about a <em>direct address</em>.AkThe type of direct address.A`Discovery errorsCmAn event emitted from the <code>MdnsDiscovery</code> service.CeHandle and drop guard for test DNS and Pkarr servers.Cithe endpoint encountered an internal error and cannot \xe2\x80\xa6ElAdaptor to let <code>Incoming</code> be <code>await</code>ed like a <code>Connecting</code>.BbThe config for the metrics server.Amno viable network path existsCjPublisher of endpoint discovery information to a pkarr \xe2\x80\xa6AnEnum of metrics for the moduleBmErrors that arise from reading from a stream.C`Errors from <code>RecvStream::read_to_end</code>AmLatencies per relay endpoint.BcVerification of a signature failed.0CfError returned when an input value is too long for \xe2\x80\xa6ChA static endpoint discovery to manually add endpoint \xe2\x80\xa6CmThe peer violated the QUIC specification as understood by \xe2\x80\xa6CiTransport-level errors occur when a peer violates the \xe2\x80\xa6AfDerive AEAD using hkdfAdHandle a DNS requestCjCaptivePortal is set when we think there\xe2\x80\x99s a captive \xe2\x80\xa6CdRemoves all direct addresses from the endpoint data.0CgTake the provided endpoint and run the client benchmarkBnCreate a client endpoint and client connection0BjParameters negotiated during the handshakeBkParameters negotiated during the handshake.ClThe socket address on which the Relay HTTP server should \xe2\x80\xa6AiInitial congestion windowCnTurns this discovery builder into a ready-to-use discovery \xe2\x80\xa6CnSpecifies the minimum MTU change to stop the MTU discovery \xe2\x80\xa6CaNotifies the system of potential network changes.ClThis implies we only use the relay to communicate and do \xe2\x80\xa6B`Number of probing tasks started.CgSets the proxy url from the environment, in this order:ClThe socket address on which to server the QUIC server is \xe2\x80\xa6BeWhether to use the unordered read APIClMaximum number of bytes the peer may transmit across all \xe2\x80\xa6CkCompletes when the stream has been reset by the peer or \xe2\x80\xa6BbNumber of QUIC datagrams received.BaReturns the peer\xe2\x80\x99s UDP address.AoWait for all tasks to complete.0CeSaturating integer addition. Computes self + rhs, \xe2\x80\xa6CkMaximum reordering in time space before time based loss \xe2\x80\xa6CkConverts into a list of <code>{key}={value}</code> strings.0CbNumber of <code>FrameType::Unknown</code> received0BnNumber of UPnP probes that found it available.BeAdds a <code>RelayUrl</code> address.CiSets the relay URL and returns the updated endpoint data.CiSets the relay URL and returns the updated endpoint info.210CfSets the user-defined data and returns the updated \xe2\x80\xa6000CdConfigure the bootstrap servers for mainline DHT \xe2\x80\xa6BdPer-client rate limit configuration.ChReason given by the transport for closing the connectionBfReasons why a connection might be lostAeConnection statisticsCoMetrics collected by an <code>crate::endpoint::Endpoint</code>.DnError when deserialising a <code>PublicKey</code> or a <code>SecretKey</code>.0ClThe maximum size of a packet sent over relay. (This only \xe2\x80\xa6BaHandler for incoming connections.BbConfig for http server rate limit.CjConfiguration for speaking to the QUIC endpoint on the \xe2\x80\xa6C`The server frame type for the challenge responseAbServer task errorsC`Parameters governing the core QUIC state machineCbThe peer doesn\xe2\x80\x99t implement any supported versionCdFuture that completes when a connection is fully \xe2\x80\xa6CbThis was a 0-RTT stream and the server rejected it000C`Removes all discovery services from the builder.BjReturns the current timeout set for pings.B`The remote endpoint to relay to.AkThe endpoint origin domain.CgParses a <code>EndpointInfo</code> from DNS TXT lookup.0CfThe socket address on which to serve the HTTPS server.AlA DNS server and pkarr relayBnMax number of bytes to read in a single burst.BoSet the maximum number of TLS tickets to cache.CnProbe indicating the presence of port mapping protocols on \xe2\x80\xa6BeSets the republish delay for the DHT.AoWait for all tasks to complete.CmRun DNS and Pkarr servers on localhost with the specified \xe2\x80\xa6CiCreates a server endpoint which runs on the given runtime0ChA static endpoint discovery to manually add endpoint \xe2\x80\xa6CkCreates a new DNS resolver configured with a single UDP \xe2\x80\xa6AiAdds a single nameserver.1CmCreates a new static discovery instance with the provided \xe2\x80\xa6CiReason given by an application for closing the connectionBmA drop guard to clean up test infrastructure.BeMessages that clients send to relays.CbThe peer\xe2\x80\x99s QUIC stack aborted the connection \xe2\x80\xa6Cnreceived a STREAM frame or a RESET_STREAM frame containing \xe2\x80\xa6A`key update errorAnEnum of metrics for the moduleDjA pkarr client to publish <code>pkarr::SignedPacket</code>s to a pkarr \xe2\x80\xa6ClThe HTTP path under which the relay allows doing latency \xe2\x80\xa6CmThe messages that a relay sends to clients or the clients \xe2\x80\xa6BoThe server frame type for authentication denialCjMax number of bytes per second to read from the client \xe2\x80\xa6CdRemoves all direct addresses from the endpoint data.0CjCurrent state of the congestion control algorithm, for \xe2\x80\xa6CiGet the default <code>RelayConfig</code> for Asia-PacificC`Get the default <code>RelayConfig</code> for EU.0C`Get the default <code>RelayConfig</code> for NA.0BaDNS lookup responses which failedAdDNS requests via UDPCjWhether to use the letsenrypt production servers (only \xe2\x80\xa6CbResolves IPv4 and IPv6 in parallel with a timeout.0B`Number of mapping tasks started.AoNumber of failed mapping tasks.CnMaximum duration of inactivity to accept before timing out \xe2\x80\xa6CiMaximum reordering in packet number space before FACK \xe2\x80\xa6CiRuns a relay server with QUIC enabled suitable for tests.DgConverts into a <code>EndpointAddr</code> by cloning the needed fields.00BiSet a custom <code>TransportConfig</code>DdSets a custom <code>quinn::TransportConfig</code> for this endpoint.ChConfiguration for sending and handling validation tokensAkAdds a list of nameservers.CnCreate a server config with the given certificate chain to \xe2\x80\xa6CkConvenience method to write an entire list of chunks to \xe2\x80\xa6Cfthe application or application protocol caused the \xe2\x80\xa6BkHostname of the default Asia-Pacific relay.AnThe peer closed the connectionB`Constructs controllers on demandBoThe default HTTP port used by the Relay server.0CgDefault TTL for the records in the pkarr signed packet.BaHostname of the default EU relay.0AlA pseudo random key for HKDFBaHostname of the default NA relay.0CmA Certificate resolver that reloads the certificate every \xe2\x80\xa6BmErrors that can arise when sending a datagramCcThe peer does not support receiving datagram framesCnBurst limit for accepting new connection. Unlimited if not \xe2\x80\xa6CmRate limit for accepting new connection. Unlimited if not \xe2\x80\xa6CjAugments endpoint addressing information for the given \xe2\x80\xa6BcCongestion events on the connectionD`Starts a connection attempt with a remote <code>Endpoint</code>.BfGet the default <code>RelayMap</code>.0CiReturns endpoint addressing information for the given \xe2\x80\xa6BjGet the latest signed packet for a pubkey.CmComputes the maximum size of datagrams that may be passed \xe2\x80\xa6Dh<code>FrameType::SendPacket</code> received, that are not disco messages0Dd<code>FrameType::SendPacket</code> sent, that are not disco messages0CfSets endpoint addressing information for the given \xe2\x80\xa6CiCreates a new client while passing a DNS resolver to use.Cmthe endpoint has reached the confidentiality or integrity \xe2\x80\xa6CkParameters for controlling the peer\xe2\x80\x99s acknowledgement \xe2\x80\xa6CdThe HTTP header name for relay client authenticationBmthe server refused to accept a new connectionCaServer-side configuration for the crypto protocolC`The default HTTPS port used by the Relay server.0DiA dyn-compatible version of <code>ProtocolHandler</code> that returns \xe2\x80\xa6Ckreceived more data than permitted in advertised data limitsCeAttempted an ordered read following an unordered readAdIntoDiscovery errorsBcParameters governing MTU discovery.Ckdetected an error with protocol compliance that was not \xe2\x80\xa6CmCan occur when parsing a string into a <code>RelayUrl</code>.0Cjreceived a frame for a stream identifier that exceeded \xe2\x80\xa6Cnreceived a frame for a stream that was not in a state that \xe2\x80\xa6CeThe server frame type for authentication confirmationAjTransport-level error codeCkError indicating that the specified QUIC version is not \xe2\x80\xa6CiMaximum quantity of out-of-order crypto layer data to \xe2\x80\xa6AoReturns the default relay mode.Dc<code>FrameType::SendPacket</code> received that are disco messages0Co<code>FrameType::SendPacket</code> sent that are disco messages0BmDNS lookup responses with at least one answerAlDNS requests via HTTPS (DoH)CeCreates a static discovery instance from endpoint \xe2\x80\xa6C`Create a VarInt without ensuring it\xe2\x80\x99s in rangeCjConverts into a <code>EndpointAddr</code> without cloning.00BnSet the capacity of the cache for public keys.AcKey cache capacity.BdNumber of updates to the local port.BjUses the default number 0 pkarr relay URL.CaPackets of other <code>FrameType</code>s received0BmPackets of other <code>FrameType</code>s sent0CbNumber of ping failures recorded across all paths.BkHistogram of path quality scores (0.0-1.0).ChNumber of pkarr relay puts that did not update the stateBfNumber of datagrams received using GROCcThe <code>EndpointId</code> of the original sender.CnSets the interval after which packets are republished even \xe2\x80\xa6CnSee <code>quinn_proto::TransportConfig::receive_window</code>.BdNumber of unique client keys per day0AmNumber of failed Upnp probes.B`ALPN for our quic addr discoveryChA discovery service that combines multiple discovery \xe2\x80\xa6BmThe encoded information had the wrong length.0BfBuilder for <code>DnsDiscovery</code>.CjSpecifies the amount of time that MTU discovery should \xe2\x80\xa6BdDNS lookup responses with no answersCaNumber of endpoints we have attempted to contact.DaReturns <code>true</code> if the use of staging relays is forced.CbNumber of HTTP requests with a non-2xx status codeCgPeriod of inactivity before sending a keep-alive packetChLetsencrypt contact email address (required if using \xe2\x80\xa6CiThe amount of PLPMTUD probe packets lost on this path \xe2\x80\xa6BlPackets were deemed lost or marked congestedCfNumber of consecutive failure resets (path recovered).CiThe amount of PLPMTUD probe packets sent on this path \xe2\x80\xa6ClReturns a stream which will yield the most recent values \xe2\x80\xa6CbThe default metrics port used by the Relay server.0Bireceived a frame that was badly formattedBgBuilder for <code>MdnsDiscovery</code>.BgBuilder for <code>PkarrResolver</code>.CeA handle to some connection internals, use with care.DkSpecifies the ACK frequency config (see <code>AckFrequencyConfig</code> \xe2\x80\xa6CiThe number of times a black hole was detected in the pathCgMaximum number of received bytes to buffer for each \xe2\x80\xa6DkSpecifies the MTU discovery config (see <code>MtuDiscoveryConfig</code> \xe2\x80\xa6AkResets path-specific state.ChNumber of times a path was marked as outdated due to \xe2\x80\xa6CdHistogram of RTT variance (in milliseconds) as a \xe2\x80\xa6CaNumber of pkarr relay puts that updated the stateAkConfig for pkarr rate limitCkThe preferred IPv4 address that will be communicated to \xe2\x80\xa6CkThe preferred IPv6 address that will be communicated to \xe2\x80\xa6CmRemoves all endpoint addressing information for the given \xe2\x80\xa6ChThe reordering threshold we will request the peer to useClDuration after a retry token was issued for which it\xe2\x80\x99s \xe2\x80\xa6Dg<code>FrameType::SendPacket</code> dropped, that are not disco messages0ClPublishes the addressing information about this endpoint \xe2\x80\xa6CnNumber of UPnP probes that resulted in a gateway different \xe2\x80\xa6CeMakes the builder respect the host system\xe2\x80\x99s DNS \xe2\x80\xa6Cg32B dest pub key + ECN bytes + one datagram\xe2\x80\x99s contentBhBuilder for <code>PkarrPublisher</code>.Cf32B src pub key + ECN bytes + one datagram\xe2\x80\x99s contentDb<code>FrameType::SendPacket</code> dropped that are disco messages0BnNumber of HTTP requests with a 2xx status codeDgLooks up endpoint info by <code>EndpointId</code> and origin domain \xe2\x80\xa60CiPerforms an IPv4 lookup with a timeout in a staggered \xe2\x80\xa60CiPerforms an IPv6 lookup with a timeout in a staggered \xe2\x80\xa60CiThe number of connections to peers we have added over \xe2\x80\xa6C`Packets of other <code>FrameType</code>s dropped0ClHistogram of packet loss rates (0.0-1.0) observed on UDP \xe2\x80\xa6AdRuns a relay server.AiNumber of expired packetsBeSigned packets removed from the storeBeNumber of updates to existing packetsCiMaximum number of bytes the peer may transmit without \xe2\x80\xa6CnSets ALPN identifiers that should be signaled as supported \xe2\x80\xa6CkSets the QUIC transport config options for this connection.Chreceived more data in CRYPTO frames than can be bufferedDkError returned when an input value is too long for <code>UserData</code>\xe2\x80\xa60ChThe websocket sub-protocol version that we currently \xe2\x80\xa6ChDerives keying material from this connection\xe2\x80\x99s TLS \xe2\x80\xa6ClWhether the reported public address differs when probing \xe2\x80\xa6CgThe number of direct connections we have made to peers.BfSigned packets inserted into the storeBkCreates a <code>pkarr::SignedPacket</code>.0CkConfigure a pkarr client for resolution of packets from \xe2\x80\xa6BhFailed to deserialize client auth headerClThe default QUIC port used by the Relay server to accept \xe2\x80\xa60BkThe production pkarr relay run by number 0.CkThe ack-eliciting threshold we will request the peer to useCdReturns if we should prefer ipv6 it replaces the \xe2\x80\xa6CkThe number of connections to peers we have removed over \xe2\x80\xa6CiSets the initial user-defined data to be published in \xe2\x80\xa6BoSet a custom <code>ValidationTokenConfig</code>ChEnvironment variable to force the use of staging relays.CjNumber of connections with a successful handshake that \xe2\x80\xa6CjNumber of times the external address obtained via port \xe2\x80\xa6DkParses a <code>EndpointInfo</code> from a <code>pkarr::SignedPacket</code>.0CkSets whether to include the direct addresses in the DNS \xe2\x80\xa6CnReports whether p looks like it\xe2\x80\x99s a packet containing an \xe2\x80\xa6CgThe number of direct connections we have lost to peers.CfWhether the socket address that is initiating this \xe2\x80\xa6BhGet the path to the store database file.Cmthe number of connection IDs provided by the peer exceeds \xe2\x80\xa6CbError returned by Session::export_keying_material.AiEndpoint close error codeClreceived transport parameters that were badly formatted, \xe2\x80\xa6ClMaximum number of outgoing application datagram bytes to \xe2\x80\xa6BcTotal duration of all HTTP requestsCeSkip the verification of the relay server\xe2\x80\x99s SSL \xe2\x80\xa6Cn32B dest pub key + ECN byte + segment size u16 + datagrams \xe2\x80\xa6CkThe default capacity of the key cache for the relay server.ClInterval in which to republish the endpoint info even if \xe2\x80\xa6BhThe testing pkarr relay run by number 0.Cm32B src pub key + ECN byte + segment size u16 + datagrams \xe2\x80\xa6CnNumber of bytes received from client connection which have \xe2\x80\xa60CjNumber of client connections which have had any frames \xe2\x80\xa60C`Bytes available in the outgoing datagram buffer.DhMaximum number of received bytes to buffer for all <code>Incoming</code>CeRaces an IPv4 and IPv6 lookup with a timeout in a \xe2\x80\xa60DaVariant of <code>max_concurrent_bidi_streams</code> affecting \xe2\x80\xa6CcThe n0 testing DNS endpoint origin, for production.00AeEndpoint close reasonChWhether to use \xe2\x80\x9cGeneric Segmentation Offload\xe2\x80\x9d to \xe2\x80\xa6ClWhether the reported public address differs when probing \xe2\x80\xa60CmMaximum number of incoming bidirectional streams that may \xe2\x80\xa6CiSets the initial user-defined data to be published in \xe2\x80\xa6BhThe default certificate reload interval.CbNumber of connections with a successful handshake.ClMaximum number of incoming application datagram bytes to \xe2\x80\xa6ChNumber of endpoints we have managed to contact directly.CkCreates a client config that trusts any servers without \xe2\x80\xa6DdSpawn the server and run until the <code>Ctrl-C</code> signal is \xe2\x80\xa6CiHow to construct new <code>congestion::Controller</code>sCbWhether to send observed address reports to peers.ClModifies the number of bidirectional streams that may be \xe2\x80\xa6C`The n0 testing DNS endpoint origin, for testing.00BcLooks up endpoint info by DNS name.0CmModifies the number of unidirectional streams that may be \xe2\x80\xa6ChSkip verification of SSL certificates from relay serversAfSkip cert verificationDgLooks up endpoint info by <code>EndpointId</code> and origin domain \xe2\x80\xa60CeNumber of consecutive PTOs after which network is \xe2\x80\xa6CjWhether to receive observed address reports from other \xe2\x80\xa6DiCreates a <code>rustls::ServerConfig</code> and certificates suitable \xe2\x80\xa6CjLooks up endpoint info by DNS name in a staggered fashion.0")