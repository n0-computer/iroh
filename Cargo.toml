[workspace]
members = [
  "iroh-base",
  "iroh-dns-server",
  "iroh",
  "iroh-test",
  "iroh/bench",
  "iroh-relay",
  "iroh-net-report",
]
resolver = "2"

[profile.release]
debug = true

[profile.dev-ci]
inherits = 'dev'
opt-level = 1

[profile.optimized-release]
inherits = 'release'
debug = false
lto = true
debug-assertions = false
opt-level = 3
panic = 'abort'
incremental = false

[workspace.lints.rust]
missing_debug_implementations = "warn"

# We use this --cfg for documenting the cargo features on which an API
# is available.  To preview this locally use: RUSTDOCFLAGS="--cfg
# iroh_docsrs" cargo +nightly doc --all-features.  We use our own
# iroh_docsrs instead of the common docsrs to avoid also enabling this
# feature in any dependencies, because some indirect dependencies
# require a feature enabled when using `--cfg docsrs` which we can not
# do.  To enable for a crate set `#![cfg_attr(iroh_docsrs,
# feature(doc_auto_cfg))]` in the crate.
# We also have our own `iroh_loom` cfg to enable tokio-rs/loom testing.
unexpected_cfgs = { level = "warn", check-cfg = ["cfg(iroh_docsrs)", "cfg(iroh_loom)"] }

[workspace.lints.clippy]
unused-async = "warn"

[patch.crates-io]
iroh-quinn = { git = "https://github.com/n0-computer/quinn.git", branch = "matheus23/browser" }
iroh-quinn-proto = { git = "https://github.com/n0-computer/quinn.git", branch = "matheus23/browser" }
iroh-quinn-udp = { git = "https://github.com/n0-computer/quinn.git", branch = "matheus23/browser" }
